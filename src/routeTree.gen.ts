/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GymRouteImport } from './routes/gym'
import { Route as DifficultyRouteImport } from './routes/difficulty'
import { Route as MissionRouteRouteImport } from './routes/mission/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as MissionIndexRouteImport } from './routes/mission/index'
import { Route as UsersUserIdRouteImport } from './routes/users/$userId'
import { Route as MissionMissionIdRouteImport } from './routes/mission/$missionId'

const GymRoute = GymRouteImport.update({
  id: '/gym',
  path: '/gym',
  getParentRoute: () => rootRouteImport,
} as any)
const DifficultyRoute = DifficultyRouteImport.update({
  id: '/difficulty',
  path: '/difficulty',
  getParentRoute: () => rootRouteImport,
} as any)
const MissionRouteRoute = MissionRouteRouteImport.update({
  id: '/mission',
  path: '/mission',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const MissionIndexRoute = MissionIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MissionRouteRoute,
} as any)
const UsersUserIdRoute = UsersUserIdRouteImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => rootRouteImport,
} as any)
const MissionMissionIdRoute = MissionMissionIdRouteImport.update({
  id: '/$missionId',
  path: '/$missionId',
  getParentRoute: () => MissionRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mission': typeof MissionRouteRouteWithChildren
  '/difficulty': typeof DifficultyRoute
  '/gym': typeof GymRoute
  '/mission/$missionId': typeof MissionMissionIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/mission/': typeof MissionIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/difficulty': typeof DifficultyRoute
  '/gym': typeof GymRoute
  '/mission/$missionId': typeof MissionMissionIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/mission': typeof MissionIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/mission': typeof MissionRouteRouteWithChildren
  '/difficulty': typeof DifficultyRoute
  '/gym': typeof GymRoute
  '/mission/$missionId': typeof MissionMissionIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/mission/': typeof MissionIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/mission'
    | '/difficulty'
    | '/gym'
    | '/mission/$missionId'
    | '/users/$userId'
    | '/mission/'
    | '/onboarding'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/difficulty'
    | '/gym'
    | '/mission/$missionId'
    | '/users/$userId'
    | '/mission'
    | '/onboarding'
  id:
    | '__root__'
    | '/'
    | '/mission'
    | '/difficulty'
    | '/gym'
    | '/mission/$missionId'
    | '/users/$userId'
    | '/mission/'
    | '/onboarding/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MissionRouteRoute: typeof MissionRouteRouteWithChildren
  DifficultyRoute: typeof DifficultyRoute
  GymRoute: typeof GymRoute
  UsersUserIdRoute: typeof UsersUserIdRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/gym': {
      id: '/gym'
      path: '/gym'
      fullPath: '/gym'
      preLoaderRoute: typeof GymRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/difficulty': {
      id: '/difficulty'
      path: '/difficulty'
      fullPath: '/difficulty'
      preLoaderRoute: typeof DifficultyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mission': {
      id: '/mission'
      path: '/mission'
      fullPath: '/mission'
      preLoaderRoute: typeof MissionRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mission/': {
      id: '/mission/'
      path: '/'
      fullPath: '/mission/'
      preLoaderRoute: typeof MissionIndexRouteImport
      parentRoute: typeof MissionRouteRoute
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mission/$missionId': {
      id: '/mission/$missionId'
      path: '/$missionId'
      fullPath: '/mission/$missionId'
      preLoaderRoute: typeof MissionMissionIdRouteImport
      parentRoute: typeof MissionRouteRoute
    }
  }
}

interface MissionRouteRouteChildren {
  MissionMissionIdRoute: typeof MissionMissionIdRoute
  MissionIndexRoute: typeof MissionIndexRoute
}

const MissionRouteRouteChildren: MissionRouteRouteChildren = {
  MissionMissionIdRoute: MissionMissionIdRoute,
  MissionIndexRoute: MissionIndexRoute,
}

const MissionRouteRouteWithChildren = MissionRouteRoute._addFileChildren(
  MissionRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MissionRouteRoute: MissionRouteRouteWithChildren,
  DifficultyRoute: DifficultyRoute,
  GymRoute: GymRoute,
  UsersUserIdRoute: UsersUserIdRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
