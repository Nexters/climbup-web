/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Holdy API
 * Holdy API
 * OpenAPI spec version: v1.0
 */

import { http } from "../../utils/http";
import type {
  ApiResultCreateUserSession,
  ApiResultFinishUserSession,
  ApiResultUserActiveSession,
  ApiResultUserSessionState,
} from ".././model";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * 유저의 진행중인 세션 받아오기
 * @summary 진행중인 세션 받아오기
 */
export const getCurrentUserSession = (
  options?: SecondParameter<typeof http>
) => {
  return http<ApiResultUserActiveSession>(
    { url: `/api/sessions`, method: "GET" },
    options
  );
};
/**
 * 유저의 오늘의 세션을 시작
 * @summary 오늘의 세션 시작하기
 */
export const startUserSession = (options?: SecondParameter<typeof http>) => {
  return http<ApiResultCreateUserSession>(
    { url: `/api/sessions`, method: "POST" },
    options
  );
};
/**
 * 유저의 특정 세션 받아오기
 * @summary 특정 세션 받아오기
 */
export const getUserSession = (
  id: number,
  options?: SecondParameter<typeof http>
) => {
  return http<ApiResultUserSessionState>(
    { url: `/api/sessions/${id}`, method: "GET" },
    options
  );
};
/**
 * 유저의 오늘의 세션을 종료
 * @summary 오늘의 세션 종료하기
 */
export const endUserSession = (
  id: number,
  options?: SecondParameter<typeof http>
) => {
  return http<ApiResultFinishUserSession>(
    { url: `/api/sessions/${id}`, method: "POST" },
    options
  );
};
export type GetCurrentUserSessionResult = NonNullable<
  Awaited<ReturnType<typeof getCurrentUserSession>>
>;
export type StartUserSessionResult = NonNullable<
  Awaited<ReturnType<typeof startUserSession>>
>;
export type GetUserSessionResult = NonNullable<
  Awaited<ReturnType<typeof getUserSession>>
>;
export type EndUserSessionResult = NonNullable<
  Awaited<ReturnType<typeof endUserSession>>
>;
